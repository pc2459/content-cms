Stage 1 - Designing the frontend:
Stage 1.1 - Wire up the backend:
Stage 1.2 - Fill up the backend:
Stage 1.3 - Sanity check:
    ☐ BONUS: write mocha tests
 ☐ Start readme.MD
Stage 2 - Figuring out Passport:
Stage 2.1 - Scaffold out administration:
Stage 2.2 - Update frontend:
 ☐ Create/Edit Editor Design
   ✔ Light grey blackground @done (15-03-17 15:26)
   ✔ Typography update: Courier @done (15-03-17 11:34)
   ☐ Improve the switch back/forth
   ✔ Tags styling @done (15-03-17 11:34)
 ☐ Themes
   ☐ Switch out default theme to Typealicious
   ☐ Create a good sans-serif theme
 ✔ Standardise reading Navbar @done (15-03-17 18:40)
 ✔ Re-invent administration Navbar @done (15-03-17 18:40)
   ✔ Use the logo @done (15-03-17 18:40)
 ☐ Markdown cheatsheet
 ☐ Fix annoying bootstrap colours on the image upload panel
 ✔ Front page @done (15-03-17 18:40)
   ✔ Cool image yeah @done (15-03-17 18:40)
   ✔ Big sign up  @done (15-03-17 18:40)
Stage 3 - Improve the backend:
 ☐ Use UPDATE instead of POST
 ☐ Settings: Themes
    ☐ Dynamically generate themes list in settings page
Stage 4 - UI improvement:
Wishlist:
 ☐ Form validation
   ☐ Sign-up: Show error if there is no password or email
   ☐ Sign-in: Show error if no password is input
 ☐ Editor: Tags typeahead
 ☐ Avatars
   ☐ Default
   ☐ Facebook
 ☐ Autosave to localstorage
 ☐ Tests - https://github.com/RefactorU/hackathon-live-feed/blob/master/server/app.js
 ☐ Authentication: Twitter
 ☐ Gulp build system
 ☐ Date settings
 ☐ Pagination settings
 ☐ Mass-actions for editing
   ☐ Mass-delete
   ☐ Mass-publish/unpublish

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✘ Should tags be of tag schema or just a String? @cancelled (15-03-17 00:17) @project(Stage 1.1 - Wire up the backend)
 ✘ Model Tags? @cancelled (15-03-17 00:17) @project(Stage 1.1 - Wire up the backend)
 ✔ Design templates in Pure, Bootstrap @done (15-03-17 00:01) @project(Stage 3 - Improve the backend)
 ✔ Typography update... @done (15-03-17 00:00) @project(Stage 2.2 - Update frontend)
 ✘ Ajaxify Save/Publish @cancelled (15-03-16 17:25) @project(Stage 4 - UI improvement)
 ✔ Merge the templates @done (15-03-16 17:07) @project(Stage 2.2 - Update frontend)
 ✘ Reading UI @cancelled (15-03-16 17:04) @project(Stage 2.2 - Update frontend)
 ✘ Posts: edit links for logged-in users @cancelled (15-03-16 17:04) @project(Stage 2.2 - Update frontend)
 ✘ Delete users @cancelled (15-03-16 17:04) @project(Stage 3 - Improve the backend)
 ✔ Users page in setting @done (15-03-16 17:04) @project(Stage 3 - Improve the backend)
 ✔ Lock signups @done (15-03-16 17:04) @project(Stage 3 - Improve the backend)
 ✔ Tabs in the modal between upload/uploads @done (15-03-16 15:18) @project(Stage 3 - Improve the backend)
 ✔ Image previews @done (15-03-16 15:18) @project(Stage 3 - Improve the backend)
 ✔ Image + url  @done (15-03-16 15:18) @project(Stage 3 - Improve the backend)
 ✔ Write routes to search db for :imageid and res.send it @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Report the url as /images/:imageid @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Posts: add images @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Get multer  @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Get images uploaded to the local filesystem @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Get images saved to an image collection @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Drop the image URL into the editor -- ajaxify???? @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Add form to upload image in a modal @done (15-03-16 14:02) @project(Stage 3 - Improve the backend)
 ✔ Deploy @done (15-03-16 11:02) @project(Stage 3 - Improve the backend)
 ✔ Set port to use env @done (15-03-16 10:46) @project(Stage 3 - Improve the backend)
 ✔ Set database to use modulus @done (15-03-16 10:46) @project(Stage 3 - Improve the backend)
 ✔ Deploy to Heroku @done (15-03-16 10:46) @project(Stage 3 - Improve the backend)
 ✔ Posts: timestamps @done (15-03-16 10:15) @project(Stage 2.2 - Update frontend)
 ✔ Admin post lists: pagination @done (15-03-16 10:15) @project(Stage 3 - Improve the backend)
 ✔ Post previews - shorten @done (15-03-13 14:29) @project(Stage 3 - Improve the backend)
 ✘ Update blog settings @cancelled (15-03-13 12:32) @project(Stage 2.1 - Scaffold out administration)
 ✘ Functionality @cancelled (15-03-13 12:32) @project(Stage 2.1 - Scaffold out administration)
 ✔ UI @done (15-03-13 12:32) @project(Stage 2.1 - Scaffold out administration)
 ✔ "/admin/settings" - blog settings @done (15-03-13 12:32) @project(Stage 2.1 - Scaffold out administration)
 ✘ Basic info: blog name, blog subtitle @cancelled (15-03-13 12:31) @project(Stage 2.1 - Scaffold out administration)
 ✔ Views: pagination @done (15-03-13 11:51) @project(Stage 3 - Improve the backend)
 ✔ Themes @done (15-03-13 10:50) @project(Stage 2.1 - Scaffold out administration)
 ✘ Twitter @cancelled (15-03-13 09:39) @project(Stage 3 - Improve the backend)
 ✔ If we're only ever going to have one blog, is this the most efficient/best practice way of storing settings? @done (15-03-13 09:32) @project(Stage 1.1 - Wire up the backend)
 ✔ Editor: Live post preview @done (15-03-12 17:33) @project(Stage 3 - Improve the backend)
 ✔ Update password... @done (15-03-12 17:23) @project(Stage 2.1 - Scaffold out administration)
 ✔ "/admin/profile" - profile settings @done (15-03-12 17:23) @project(Stage 2.1 - Scaffold out administration)
 ✔ Add lastEdited: Date  @done (15-03-12 16:53) @project(Stage 1.1 - Wire up the backend)
 ✔ Update basic info @done (15-03-12 16:52) @project(Stage 2.1 - Scaffold out administration)
 ✔ Display basic info @done (15-03-12 16:52) @project(Stage 2.1 - Scaffold out administration)
 ✔ UI @done (15-03-12 11:45) @project(Stage 2.1 - Scaffold out administration)
 ✔ State: published/draft @done (15-03-12 11:45) @project(Stage 2.1 - Scaffold out administration)
 ✔ Don't show draft posts on main read page @done (15-03-12 11:45) @project(Stage 2.1 - Scaffold out administration)
 ✔ Display indicator that post is a draft on /admin @done (15-03-12 11:45) @project(Stage 2.1 - Scaffold out administration)
 ✔ "/admin/posts/:postid" - edit single post @done (15-03-12 11:45) @project(Stage 2.1 - Scaffold out administration)
 ✔ Set post as published/draft @done (15-03-12 11:19) @project(Stage 2.1 - Scaffold out administration)
 ✔ Functionality @done (15-03-12 10:42) @project(Stage 2.1 - Scaffold out administration)
 ✔ Delete post @done (15-03-12 10:42) @project(Stage 2.1 - Scaffold out administration)
 ✔ Date edited @done (15-03-12 10:42) @project(Stage 2.1 - Scaffold out administration)
 ✔ Add link to backend @done (15-03-12 10:26) @project(Stage 2.2 - Update frontend)
 ✔ List posts in last-edited order @done (15-03-12 10:02) @project(Stage 2.1 - Scaffold out administration)
 ✔ Add post @done (15-03-12 10:02) @project(Stage 2.1 - Scaffold out administration)
 ✔ Tags @done (15-03-11 20:39) @project(Stage 2.1 - Scaffold out administration)
 ✔ Editor: Markdown Editor @done (15-03-11 19:26) @project(Stage 2.1 - Scaffold out administration)
 ✔ Edit post @done (15-03-11 19:26) @project(Stage 2.1 - Scaffold out administration)
 ✔ Save HTML string to the server @done (15-03-11 19:19) @project(Stage 2.1 - Scaffold out administration)
 ✔ "/admin" - list all posts available for editing @done (15-03-11 19:19) @project(Stage 2.1 - Scaffold out administration)
 ✔ Preview pane on separate tab @done (15-03-11 18:42) @project(Stage 2.1 - Scaffold out administration)
 ✔ Convert markdown to HTML @done (15-03-11 18:42) @project(Stage 2.1 - Scaffold out administration)
 ✔ Wire it up @done (15-03-11 12:01) @project(Stage 2.1 - Scaffold out administration)
 ✔ Scaffold page @done (15-03-11 12:01) @project(Stage 2.1 - Scaffold out administration)
 ✔ Plan out administration UI/flow @done (15-03-11 11:36) @project(Stage 2.1 - Scaffold out administration)
 ✔ Flash messages to display login errors @done (15-03-11 11:28) @project(Stage 2 - Figuring out Passport)
 ✔ Sign-out logic @done (15-03-10 20:28) @project(Stage 2 - Figuring out Passport)
 ✔ Write the signup/signin logic @done (15-03-10 20:11) @project(Stage 2 - Figuring out Passport)
 ✔ Wire up login page to Passport @done (15-03-10 20:11) @project(Stage 2 - Figuring out Passport)
 ✔ Facebook authentication @done (15-03-10 20:11) @project(Stage 2 - Figuring out Passport)
 ✔ Create app in FB developers zone @done (15-03-10 20:11) @project(Stage 2 - Figuring out Passport)
 ✔ Local authentication @done (15-03-10 19:11) @project(Stage 2 - Figuring out Passport)
 ✔ Create login page @done (15-03-10 19:11) @project(Stage 2 - Figuring out Passport)
 ✔ RESTRICT ROUTES @done (15-03-10 19:10) @project(Stage 2.1 - Scaffold out administration)
 ✔ Choose a front-end framework!!! @done (15-03-10 17:47) @project(Stage 1 - Designing the frontend)
 ✔ Wire up signup page @done (15-03-10 15:41) @project(Stage 2 - Figuring out Passport)
 ✔ Check if user has been successfully populated @done (15-03-10 15:41) @project(Stage 2 - Figuring out Passport)
 ✔ Create a signup page @done (15-03-10 13:57) @project(Stage 2 - Figuring out Passport)
 ✔ Watch Passport video @done (15-03-10 12:15) @project(Stage 2 - Figuring out Passport)
 ✔ Create front-end templates @done (15-03-10 10:14) @project(Stage 1 - Designing the frontend)
 ✔ Check to see if it's working @done (15-03-10 10:14) @project(Stage 1.3 - Sanity check)
 ✔ tag: all posts by tag @done (15-03-10 09:04) @project(Stage 1 - Designing the frontend)
 ✔ Create back-end routes @done (15-03-10 09:04) @project(Stage 1.1 - Wire up the backend)
 ✔ "/tag/:tagname": Get all posts by tag @done (15-03-10 09:04) @project(Stage 1.1 - Wire up the backend)
 ✔ post: individual post @done (15-03-09 17:44) @project(Stage 1 - Designing the frontend)
 ✔ "/posts/:postid": Get single post @done (15-03-09 17:44) @project(Stage 1.1 - Wire up the backend)
 ✔ Wire up mongoose @done (15-03-09 17:39) @project(Stage 1.1 - Wire up the backend)
 ✔ user: all posts by user @done (15-03-09 17:35) @project(Stage 1 - Designing the frontend)
 ✔ "/:userid": Get all posts by a user @done (15-03-09 17:35) @project(Stage 1.1 - Wire up the backend)
 ✔ "/": Get all posts @done (15-03-09 17:15) @project(Stage 1.1 - Wire up the backend)
 ✔ Seed posts to the single user @done (15-03-09 17:07) @project(Stage 1.2 - Fill up the backend)
 ✔ Seed database @done (15-03-09 17:07) @project(Stage 1.2 - Fill up the backend)
 ✔ Create seedfile @done (15-03-09 17:07) @project(Stage 1.2 - Fill up the backend)
 ✔ Actually seed it @done (15-03-09 17:07) @project(Stage 1.2 - Fill up the backend)
 ✔ Users @done (15-03-09 16:50) @project(Stage 1.2 - Fill up the backend)
 ✔ Blogs? @done (15-03-09 16:50) @project(Stage 1.2 - Fill up the backend)
 ✔ Model User @done (15-03-09 16:44) @project(Stage 1.1 - Wire up the backend)
 ✔ Model Posts @done (15-03-09 16:44) @project(Stage 1.1 - Wire up the backend)
 ✔ Model Blog @done (15-03-09 16:44) @project(Stage 1.1 - Wire up the backend)
 ✔ NPM install @done (15-03-09 16:35) @project(Stage 1.1 - Wire up the backend)
 ✔ index: all posts/main @done (15-03-09 16:29) @project(Stage 1 - Designing the frontend)
 ✔ Wireframe out in Skeleton @done (15-03-09 16:23) @project(Stage 1 - Designing the frontend)
